{
    "question": "主服务器和从属 MySQL 服务器的复制正在运行。二进制日志文件占用的磁盘空间继续增长。以下哪两种方法可以解决此问题？",
    "selections": {
        "A": "设置 `binlog_expire_logs_seconds` 系统变量。",
        "B": "手动删除文件系统上的所有二进制日志文件以释放存储空间。",
        "C": "在主服务器上，通过删除 `--log-bin` 选项禁用二进制日志记录。",
        "D": "执行 `PURGE BINARY LOGS` 语句。",
        "E": "执行 `FLUSH LOGS` 语句。"
    },
    "answers": ["A", "D"],
    "summary": "#### 选项分析\n- **A. 设置 `binlog_expire_logs_seconds` 系统变量**：正确。该变量用于自动清理过期的二进制日志文件，防止磁盘空间持续增长。\n- **B. 手动删除文件系统上的所有二进制日志文件**：错误。手动删除二进制日志文件可能导致复制中断，因为从属服务器可能仍在依赖这些日志进行数据同步。\n- **C. 在主服务器上，通过删除 `--log-bin` 选项禁用二进制日志记录**：错误。禁用二进制日志会破坏复制功能，因为从属服务器需要二进制日志来获取变更信息。\n- **D. 执行 `PURGE BINARY LOGS` 语句**：正确。该语句可以手动清理不再需要的二进制日志文件，释放磁盘空间。\n- **E. 执行 `FLUSH LOGS` 语句**：错误。`FLUSH LOGS` 仅会刷新日志并创建新的日志文件，不会清理旧的日志文件，无法解决磁盘空间增长的问题。\n\n#### 考点总结\n本题考查了 MySQL 二进制日志（Binary Log）的管理与优化，特别是如何处理二进制日志文件占用过多磁盘空间的问题。关键知识点包括：\n1. `binlog_expire_logs_seconds` 系统变量的作用。\n2. `PURGE BINARY LOGS` 语句的功能。\n3. 二进制日志在复制中的重要性，以及不当操作可能导致的后果。\n4. `FLUSH LOGS` 语句的局限性。\n",
    "suggestion": "#### 应试技巧\n1. **理解核心概念**：熟悉二进制日志的作用、配置选项以及相关命令的功能是解答此类问题的关键。\n2. **排除法优先**：对于多选题，先排除明显错误的选项（如破坏复制功能的操作），再结合剩余选项进行分析。\n3. **关注细节**：注意题目中提到的“复制正在运行”这一条件，确保所选方法不会影响复制功能。\n\n#### 学习建议\n1. **深入学习二进制日志管理**：掌握 `binlog_expire_logs_seconds`、`PURGE BINARY LOGS` 和 `FLUSH LOGS` 的使用场景及区别。\n2. **实践操作**：在实验环境中模拟二进制日志的增长情况，并尝试使用上述方法进行清理，加深理解。\n3. **复习复制原理**：了解二进制日志在主从复制中的作用，避免因误操作导致复制中断。\n4. **参考官方文档**：查阅 MySQL 官方文档关于二进制日志管理的部分，确保对相关命令和参数有全面的认识。\n"
}