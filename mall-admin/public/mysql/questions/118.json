{
    "question": "关于 MySQL 透明数据加密（TDE），以下哪项陈述是正确的？",
    "selections": {
        "A": "MySQL TDE 使用合适的密钥环插件将密钥存储在集中的位置。",
        "B": "仅当主体数据库密钥已知或存在于 Key Vault 规范中时，才能重新生成丢失的表空间加密密钥。",
        "C": "仅当表存储在 SYSTEM 表空间中时，TDE 才能加密 InnoDB 和 MyISAM 表。",
        "D": "通过在 MySQL 配置文件中设置 `keyring_engine=ALL` 变量，可以加密 MyISAM 和 InnoDB 表。"
    },
    "answers": ["A"],
    "summary": "#### 选项分析\n- **A**: 正确。MySQL 的透明数据加密（TDE）确实依赖于密钥环插件来集中管理密钥，这是 TDE 的核心机制之一。\n- **B**: 错误。重新生成丢失的表空间加密密钥需要特定条件，但并非必须依赖主体数据库密钥或 Key Vault 规范。\n- **C**: 错误。TDE 的加密范围与表存储的表空间类型无关，InnoDB 和 MyISAM 表均可加密，但 MyISAM 表的加密支持有限。\n- **D**: 错误。`keyring_engine=ALL` 是密钥环插件的配置选项，但它并不直接决定是否加密 MyISAM 和 InnoDB 表，而是用于指定密钥环的实现方式。\n\n#### 考点总结\n本题考查 MySQL 透明数据加密（TDE）的核心概念，包括密钥管理、加密范围以及相关配置选项的理解。考生需要掌握 TDE 的工作原理及其与密钥环插件的关系。",
    "suggestion": "#### 应试技巧\n1. **理解核心概念**：熟悉 MySQL TDE 的工作机制，特别是密钥管理的部分，这是解答此类题目关键。\n2. **区分细节**：注意选项中的细微差别，例如加密范围、配置变量的作用等，避免被误导。\n3. **结合文档**：参考官方文档了解 TDE 的具体实现和限制，尤其是对 MyISAM 和 InnoDB 表的支持差异。\n\n#### 学习建议\n1. **深入学习 TDE**：研究 MySQL 官方文档中关于 TDE 的章节，理解其应用场景和技术细节。\n2. **实践操作**：在实验环境中配置 TDE，亲身体验密钥管理、加密过程以及相关配置选项的效果。\n3. **复习安全模块**：OCP 考试中安全模块涉及内容广泛，确保对用户权限管理、加密技术、防火墙配置等有全面掌握。"
}