# HTTP 配置 - 重定向到HTTPS
server {
    listen 80;
    server_name 47.107.32.143 js101.fun www.js101.fun;
    
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;
    
    # 重定向所有HTTP请求到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # 健康检查端点保留在HTTP
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}

# HTTPS 配置
server {
    listen 443 ssl;
    server_name 47.107.32.143 js101.fun www.js101.fun;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/js101.fun_bundle.crt;
    ssl_certificate_key /etc/nginx/ssl/js101.fun.key;
    
    # SSL设置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # HSTS配置（备案通过后可考虑启用）
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    
    # 根目录配置
    root /usr/share/nginx/html;
    index index.html;
    
    # 日志配置
    access_log /var/log/nginx/access_ssl.log;
    error_log /var/log/nginx/error_ssl.log debug;
    
    # 支持SPA应用路由
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # 静态资源缓存设置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # 重写 /admin/login 到 /api/admin/login
    location = /admin/login {
        rewrite ^/admin/login$ /api/admin/login last;
    }
    
    # API代理配置 - 使用容器名代替localhost
    location /api/ {
        proxy_pass http://mall-server-prod:8080/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 确保所有不带/api前缀的API请求也能正确转发
    location ~* ^/(?!api/)(.*)$ {
        try_files $uri $uri/ /index.html;
    }
    
    # 健康检查
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
    
    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
